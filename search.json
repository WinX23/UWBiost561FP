[{"path":"https://yxwr5.github.io/UWBiost561FP/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 UWBiost561FP authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/articles/FP.html","id":"lower-triangular-matrix","dir":"Articles","previous_headings":"","what":"lower-triangular matrix","title":"FP","text":"","code":"lower <- generate_tri_pascal_matrix(10, \"lower\") lower #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    0    0    0    0    0    0    0    0     0 #>  [2,]    1    1    0    0    0    0    0    0    0     0 #>  [3,]    1    2    1    0    0    0    0    0    0     0 #>  [4,]    1    3    3    1    0    0    0    0    0     0 #>  [5,]    1    4    6    4    1    0    0    0    0     0 #>  [6,]    1    5   10   10    5    1    0    0    0     0 #>  [7,]    1    6   15   20   15    6    1    0    0     0 #>  [8,]    1    7   21   35   35   21    7    1    0     0 #>  [9,]    1    8   28   56   70   56   28    8    1     0 #> [10,]    1    9   36   84  126  126   84   36    9     1 pascal_matrix_plot(lower)"},{"path":"https://yxwr5.github.io/UWBiost561FP/articles/FP.html","id":"upper-triangular-matrix","dir":"Articles","previous_headings":"","what":"upper-triangular matrix","title":"FP","text":"","code":"upper <- generate_tri_pascal_matrix(16, \"upper\") upper #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    1    1    1    1    1    1    1    1     1     1     1     1 #>  [2,]    0    1    2    3    4    5    6    7    8     9    10    11    12 #>  [3,]    0    0    1    3    6   10   15   21   28    36    45    55    66 #>  [4,]    0    0    0    1    4   10   20   35   56    84   120   165   220 #>  [5,]    0    0    0    0    1    5   15   35   70   126   210   330   495 #>  [6,]    0    0    0    0    0    1    6   21   56   126   252   462   792 #>  [7,]    0    0    0    0    0    0    1    7   28    84   210   462   924 #>  [8,]    0    0    0    0    0    0    0    1    8    36   120   330   792 #>  [9,]    0    0    0    0    0    0    0    0    1     9    45   165   495 #> [10,]    0    0    0    0    0    0    0    0    0     1    10    55   220 #> [11,]    0    0    0    0    0    0    0    0    0     0     1    11    66 #> [12,]    0    0    0    0    0    0    0    0    0     0     0     1    12 #> [13,]    0    0    0    0    0    0    0    0    0     0     0     0     1 #> [14,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [15,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [16,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>       [,14] [,15] [,16] #>  [1,]     1     1     1 #>  [2,]    13    14    15 #>  [3,]    78    91   105 #>  [4,]   286   364   455 #>  [5,]   715  1001  1365 #>  [6,]  1287  2002  3003 #>  [7,]  1716  3003  5005 #>  [8,]  1716  3432  6435 #>  [9,]  1287  3003  6435 #> [10,]   715  2002  5005 #> [11,]   286  1001  3003 #> [12,]    78   364  1365 #> [13,]    13    91   455 #> [14,]     1    14   105 #> [15,]     0     1    15 #> [16,]     0     0     1 pascal_matrix_plot(upper)"},{"path":"https://yxwr5.github.io/UWBiost561FP/articles/FP.html","id":"symmetric-matrix","dir":"Articles","previous_headings":"","what":"symmetric matrix","title":"FP","text":"","code":"symm <- generate_symm_pascal_matrix(26) symm #>       [,1] [,2] [,3] [,4]  [,5]   [,6]   [,7]    [,8]     [,9]    [,10] #>  [1,]    1    1    1    1     1      1      1       1        1        1 #>  [2,]    1    2    3    4     5      6      7       8        9       10 #>  [3,]    1    3    6   10    15     21     28      36       45       55 #>  [4,]    1    4   10   20    35     56     84     120      165      220 #>  [5,]    1    5   15   35    70    126    210     330      495      715 #>  [6,]    1    6   21   56   126    252    462     792     1287     2002 #>  [7,]    1    7   28   84   210    462    924    1716     3003     5005 #>  [8,]    1    8   36  120   330    792   1716    3432     6435    11440 #>  [9,]    1    9   45  165   495   1287   3003    6435    12870    24310 #> [10,]    1   10   55  220   715   2002   5005   11440    24310    48620 #> [11,]    1   11   66  286  1001   3003   8008   19448    43758    92378 #> [12,]    1   12   78  364  1365   4368  12376   31824    75582   167960 #> [13,]    1   13   91  455  1820   6188  18564   50388   125970   293930 #> [14,]    1   14  105  560  2380   8568  27132   77520   203490   497420 #> [15,]    1   15  120  680  3060  11628  38760  116280   319770   817190 #> [16,]    1   16  136  816  3876  15504  54264  170544   490314  1307504 #> [17,]    1   17  153  969  4845  20349  74613  245157   735471  2042975 #> [18,]    1   18  171 1140  5985  26334 100947  346104  1081575  3124550 #> [19,]    1   19  190 1330  7315  33649 134596  480700  1562275  4686825 #> [20,]    1   20  210 1540  8855  42504 177100  657800  2220075  6906900 #> [21,]    1   21  231 1771 10626  53130 230230  888030  3108105 10015005 #> [22,]    1   22  253 2024 12650  65780 296010 1184040  4292145 14307150 #> [23,]    1   23  276 2300 14950  80730 376740 1560780  5852925 20160075 #> [24,]    1   24  300 2600 17550  98280 475020 2035800  7888725 28048800 #> [25,]    1   25  325 2925 20475 118755 593775 2629575 10518300 38567100 #> [26,]    1   26  351 3276 23751 142506 736281 3365856 13884156 52451256 #>           [,11]     [,12]      [,13]      [,14]       [,15]       [,16] #>  [1,]         1         1          1          1           1           1 #>  [2,]        11        12         13         14          15          16 #>  [3,]        66        78         91        105         120         136 #>  [4,]       286       364        455        560         680         816 #>  [5,]      1001      1365       1820       2380        3060        3876 #>  [6,]      3003      4368       6188       8568       11628       15504 #>  [7,]      8008     12376      18564      27132       38760       54264 #>  [8,]     19448     31824      50388      77520      116280      170544 #>  [9,]     43758     75582     125970     203490      319770      490314 #> [10,]     92378    167960     293930     497420      817190     1307504 #> [11,]    184756    352716     646646    1144066     1961256     3268760 #> [12,]    352716    705432    1352078    2496144     4457400     7726160 #> [13,]    646646   1352078    2704156    5200300     9657700    17383860 #> [14,]   1144066   2496144    5200300   10400600    20058300    37442160 #> [15,]   1961256   4457400    9657700   20058300    40116600    77558760 #> [16,]   3268760   7726160   17383860   37442160    77558760   155117520 #> [17,]   5311735  13037895   30421755   67863915   145422675   300540195 #> [18,]   8436285  21474180   51895935  119759850   265182525   565722720 #> [19,]  13123110  34597290   86493225  206253075   471435600  1037158320 #> [20,]  20030010  54627300  141120525  347373600   818809200  1855967520 #> [21,]  30045015  84672315  225792840  573166440  1391975640  3247943160 #> [22,]  44352165 129024480  354817320  927983760  2319959400  5567902560 #> [23,]  64512240 193536720  548354040 1476337800  3796297200  9364199760 #> [24,]  92561040 286097760  834451800 2310789600  6107086800 15471286560 #> [25,] 131128140 417225900 1251677700 3562467300  9669554100 25140840660 #> [26,] 183579396 600805296 1852482996 5414950296 15084504396 40225345056 #>              [,17]        [,18]        [,19]        [,20]        [,21] #>  [1,]            1            1            1 1.000000e+00 1.000000e+00 #>  [2,]           17           18           19 2.000000e+01 2.100000e+01 #>  [3,]          153          171          190 2.100000e+02 2.310000e+02 #>  [4,]          969         1140         1330 1.540000e+03 1.771000e+03 #>  [5,]         4845         5985         7315 8.855000e+03 1.062600e+04 #>  [6,]        20349        26334        33649 4.250400e+04 5.313000e+04 #>  [7,]        74613       100947       134596 1.771000e+05 2.302300e+05 #>  [8,]       245157       346104       480700 6.578000e+05 8.880300e+05 #>  [9,]       735471      1081575      1562275 2.220075e+06 3.108105e+06 #> [10,]      2042975      3124550      4686825 6.906900e+06 1.001500e+07 #> [11,]      5311735      8436285     13123110 2.003001e+07 3.004502e+07 #> [12,]     13037895     21474180     34597290 5.462730e+07 8.467232e+07 #> [13,]     30421755     51895935     86493225 1.411205e+08 2.257928e+08 #> [14,]     67863915    119759850    206253075 3.473736e+08 5.731664e+08 #> [15,]    145422675    265182525    471435600 8.188092e+08 1.391976e+09 #> [16,]    300540195    565722720   1037158320 1.855968e+09 3.247943e+09 #> [17,]    601080390   1166803110   2203961430 4.059929e+09 7.307872e+09 #> [18,]   1166803110   2333606220   4537567650 8.597497e+09 1.590537e+10 #> [19,]   2203961430   4537567650   9075135300 1.767263e+10 3.357800e+10 #> [20,]   4059928950   8597496600  17672631900 3.534526e+10 6.892326e+10 #> [21,]   7307872110  15905368710  33578000610 6.892326e+10 1.378465e+11 #> [22,]  12875774670  28781143380  62359143990 1.312824e+11 2.691289e+11 #> [23,]  22239974430  51021117810 113380261800 2.446627e+11 5.137916e+11 #> [24,]  37711260990  88732378800 202112640600 4.467753e+11 9.605669e+11 #> [25,]  62852101650 151584480450 353697121050 8.004724e+11 1.761039e+12 #> [26,] 103077446706 254661927156 608359048206 1.408831e+12 3.169871e+12 #>              [,22]        [,23]        [,24]        [,25]        [,26] #>  [1,] 1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00 #>  [2,] 2.200000e+01 2.300000e+01 2.400000e+01 2.500000e+01 2.600000e+01 #>  [3,] 2.530000e+02 2.760000e+02 3.000000e+02 3.250000e+02 3.510000e+02 #>  [4,] 2.024000e+03 2.300000e+03 2.600000e+03 2.925000e+03 3.276000e+03 #>  [5,] 1.265000e+04 1.495000e+04 1.755000e+04 2.047500e+04 2.375100e+04 #>  [6,] 6.578000e+04 8.073000e+04 9.828000e+04 1.187550e+05 1.425060e+05 #>  [7,] 2.960100e+05 3.767400e+05 4.750200e+05 5.937750e+05 7.362810e+05 #>  [8,] 1.184040e+06 1.560780e+06 2.035800e+06 2.629575e+06 3.365856e+06 #>  [9,] 4.292145e+06 5.852925e+06 7.888725e+06 1.051830e+07 1.388416e+07 #> [10,] 1.430715e+07 2.016008e+07 2.804880e+07 3.856710e+07 5.245126e+07 #> [11,] 4.435216e+07 6.451224e+07 9.256104e+07 1.311281e+08 1.835794e+08 #> [12,] 1.290245e+08 1.935367e+08 2.860978e+08 4.172259e+08 6.008053e+08 #> [13,] 3.548173e+08 5.483540e+08 8.344518e+08 1.251678e+09 1.852483e+09 #> [14,] 9.279838e+08 1.476338e+09 2.310790e+09 3.562467e+09 5.414950e+09 #> [15,] 2.319959e+09 3.796297e+09 6.107087e+09 9.669554e+09 1.508450e+10 #> [16,] 5.567903e+09 9.364200e+09 1.547129e+10 2.514084e+10 4.022535e+10 #> [17,] 1.287577e+10 2.223997e+10 3.771126e+10 6.285210e+10 1.030774e+11 #> [18,] 2.878114e+10 5.102112e+10 8.873238e+10 1.515845e+11 2.546619e+11 #> [19,] 6.235914e+10 1.133803e+11 2.021126e+11 3.536971e+11 6.083590e+11 #> [20,] 1.312824e+11 2.446627e+11 4.467753e+11 8.004724e+11 1.408831e+12 #> [21,] 2.691289e+11 5.137916e+11 9.605669e+11 1.761039e+12 3.169871e+12 #> [22,] 5.382579e+11 1.052049e+12 2.012616e+12 3.773656e+12 6.943527e+12 #> [23,] 1.052049e+12 2.104099e+12 4.116715e+12 7.890371e+12 1.483390e+13 #> [24,] 2.012616e+12 4.116715e+12 8.233431e+12 1.612380e+13 3.095770e+13 #> [25,] 3.773656e+12 7.890371e+12 1.612380e+13 3.224760e+13 6.320530e+13 #> [26,] 6.943527e+12 1.483390e+13 3.095770e+13 6.320530e+13 1.264106e+14 pascal_matrix_plot(symm)"},{"path":"https://yxwr5.github.io/UWBiost561FP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yingxuan Wu. Author, maintainer.","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu Y (2024). UWBiost561FP: Package Pascal matrix. R package version 0.0.0.9000, https://yxwr5.github.io/UWBiost561FP/.","code":"@Manual{,   title = {UWBiost561FP: Package for Pascal matrix},   author = {Yingxuan Wu},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://yxwr5.github.io/UWBiost561FP/}, }"},{"path":"https://yxwr5.github.io/UWBiost561FP/index.html","id":"purpose","dir":"","previous_headings":"","what":"Package for Pascal matrix","title":"Package for Pascal matrix","text":"package UW BIOST 561 Final Project (Spring 2024). URL GitHub (.e., source code) : https://github.com/YxWr5/UWBiost561FP URL Pkgdown webpage : https://yxwr5.github.io/UWBiost561FP/","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Package for Pascal matrix","text":"package called UWBiost561FP. install, run following code (R): Upon completion, can run following code (R):","code":"library(devtools) devtools::install_github(\"YxWr5/UWBiost561FP\") library(UWBiost561FP)"},{"path":"https://yxwr5.github.io/UWBiost561FP/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Package for Pascal matrix","text":"package depends following packages: expm, tidyr, dplyr, ggplot2.","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/index.html","id":"session-info","dir":"","previous_headings":"","what":"Session info","title":"Package for Pascal matrix","text":"package developed following environment","code":"> devtools::session_info() - Session info ----------------------------------------------------------------  setting  value  version  R version 4.3.3 (2024-02-29 ucrt)  os       Windows 11 x64 (build 22631)  system   x86_64, mingw32  ui       RStudio  language (EN)  collate  English_United States.utf8  ctype    C  tz       America/Los_Angeles  date     2024-06-05  rstudio  2023.06.1+524 Mountain Hydrangea (desktop)  pandoc   3.1.1 @ C:/R Programming/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)  - Packages --------------------------------------------------------------------  ! package      * version    date (UTC) lib source    brio           1.1.4      2023-12-10 [1] CRAN (R 4.3.3)    bslib          0.7.0      2024-03-29 [1] CRAN (R 4.3.3)    cachem         1.0.8      2023-05-01 [1] CRAN (R 4.3.3)    callr          3.7.6      2024-03-25 [1] CRAN (R 4.3.3)    cli            3.6.2      2023-12-11 [1] CRAN (R 4.3.3)    colorspace     2.1-0      2023-01-23 [1] CRAN (R 4.3.3)    commonmark     1.9.1      2024-01-30 [1] CRAN (R 4.3.3)    crayon         1.5.2      2022-09-29 [1] CRAN (R 4.3.3)    curl           5.2.1      2024-03-01 [1] CRAN (R 4.3.3)    desc           1.4.3      2023-12-10 [1] CRAN (R 4.3.3)    devtools       2.4.5      2022-10-11 [1] CRAN (R 4.3.3)    digest         0.6.35     2024-03-11 [1] CRAN (R 4.3.3)    dplyr          1.1.4      2023-11-17 [1] CRAN (R 4.3.3)    ellipsis       0.3.2      2021-04-29 [1] CRAN (R 4.3.3)    evaluate       0.23       2023-11-01 [1] CRAN (R 4.3.3)    expm           0.999-9    2024-01-11 [1] CRAN (R 4.3.3)    fansi          1.0.6      2023-12-08 [1] CRAN (R 4.3.3)    farver         2.1.1      2022-07-06 [1] CRAN (R 4.3.3)    fastmap        1.1.1      2023-02-24 [1] CRAN (R 4.3.3)    fs             1.6.3      2023-07-20 [1] CRAN (R 4.3.3)    generics       0.1.3      2022-07-05 [1] CRAN (R 4.3.3)    ggplot2        3.5.0      2024-02-23 [1] CRAN (R 4.3.3)    glue           1.7.0      2024-01-09 [1] CRAN (R 4.3.3)    gtable         0.3.4      2023-08-21 [1] CRAN (R 4.3.3)    highr          0.10       2022-12-22 [1] CRAN (R 4.3.3)    hms            1.1.3      2023-03-21 [1] CRAN (R 4.3.3)    htmltools      0.5.8      2024-03-25 [1] CRAN (R 4.3.3)    htmlwidgets    1.6.4      2023-12-06 [1] CRAN (R 4.3.3)    httpuv         1.6.15     2024-03-26 [1] CRAN (R 4.3.3)    jquerylib      0.1.4      2021-04-26 [1] CRAN (R 4.3.3)    jsonlite       1.8.8      2023-12-04 [1] CRAN (R 4.3.3)    knitr          1.45       2023-10-30 [1] CRAN (R 4.3.3)    labeling       0.4.3      2023-08-29 [1] CRAN (R 4.3.1)    later          1.3.2      2023-12-06 [1] CRAN (R 4.3.3)    lattice        0.22-5     2023-10-24 [1] CRAN (R 4.3.3)    lifecycle      1.0.4      2023-11-07 [1] CRAN (R 4.3.3)    magrittr       2.0.3      2022-03-30 [1] CRAN (R 4.3.3)    Matrix         1.6-5      2024-01-11 [1] CRAN (R 4.3.3)    memoise        2.0.1      2021-11-26 [1] CRAN (R 4.3.3)    mime           0.12       2021-09-28 [1] CRAN (R 4.3.1)    miniUI         0.1.1.1    2018-05-18 [1] CRAN (R 4.3.3)    munsell        0.5.1      2024-04-01 [1] CRAN (R 4.3.3)    pillar         1.9.0      2023-03-22 [1] CRAN (R 4.3.3)    pkgbuild       1.4.4      2024-03-17 [1] CRAN (R 4.3.3)    pkgconfig      2.0.3      2019-09-22 [1] CRAN (R 4.3.3)    pkgdown        2.0.7      2022-12-14 [1] CRAN (R 4.3.3)    pkgload        1.3.4      2024-01-16 [1] CRAN (R 4.3.3)    prettyunits    1.2.0      2023-09-24 [1] CRAN (R 4.3.3)    processx       3.8.4      2024-03-16 [1] CRAN (R 4.3.3)    profvis        0.3.8      2023-05-02 [1] CRAN (R 4.3.3)    promises       1.2.1      2023-08-10 [1] CRAN (R 4.3.3)    ps             1.7.6      2024-01-18 [1] CRAN (R 4.3.3)    purrr          1.0.2      2023-08-10 [1] CRAN (R 4.3.3)    R6             2.5.1      2021-08-19 [1] CRAN (R 4.3.3)    rcmdcheck      1.4.0      2021-09-27 [1] CRAN (R 4.3.3)    Rcpp           1.0.12     2024-01-09 [1] CRAN (R 4.3.3)    readr          2.1.5      2024-01-10 [1] CRAN (R 4.3.3)    remotes        2.5.0      2024-03-17 [1] CRAN (R 4.3.3)    rlang          1.1.3      2024-01-10 [1] CRAN (R 4.3.3)    rmarkdown      2.26       2024-03-05 [1] CRAN (R 4.3.3)    roxygen2       7.3.1      2024-01-22 [1] CRAN (R 4.3.3)    rprojroot      2.0.4      2023-11-05 [1] CRAN (R 4.3.3)    rstudioapi     0.16.0     2024-03-24 [1] CRAN (R 4.3.3)    sass           0.4.9      2024-03-15 [1] CRAN (R 4.3.3)    scales         1.3.0      2023-11-28 [1] CRAN (R 4.3.3)    sessioninfo    1.2.2      2021-12-06 [1] CRAN (R 4.3.3)    shiny          1.8.1.1    2024-04-02 [1] CRAN (R 4.3.3)    stringi        1.8.3      2023-12-11 [1] CRAN (R 4.3.2)    stringr        1.5.1      2023-11-14 [1] CRAN (R 4.3.3)    testthat     * 3.2.1      2023-12-02 [1] CRAN (R 4.3.3)    tibble         3.2.1      2023-03-20 [1] CRAN (R 4.3.3)    tidyr          1.3.1      2024-01-24 [1] CRAN (R 4.3.3)    tidyselect     1.2.1      2024-03-11 [1] CRAN (R 4.3.3)    tzdb           0.4.0      2023-05-12 [1] CRAN (R 4.3.3)    urlchecker     1.0.1      2021-11-30 [1] CRAN (R 4.3.3)    usethis        2.2.3      2024-02-19 [1] CRAN (R 4.3.3)    utf8           1.2.4      2023-10-22 [1] CRAN (R 4.3.3)  P UWBiost561FP * 0.0.0.9000 2024-06-05 [?] load_all()    vctrs          0.6.5      2023-12-01 [1] CRAN (R 4.3.3)    withr          3.0.0      2024-01-16 [1] CRAN (R 4.3.3)    xfun           0.43       2024-03-25 [1] CRAN (R 4.3.3)    xml2           1.3.6      2023-12-04 [1] CRAN (R 4.3.3)    xopen          1.0.0      2018-09-17 [1] CRAN (R 4.3.3)    xtable         1.8-4      2019-04-21 [1] CRAN (R 4.3.3)    yaml           2.3.8      2023-12-11 [1] CRAN (R 4.3.2)   [1] C:/R Programming/R-4.3.3/library"},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_symm_pascal_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a symmetric pascal matrix — generate_symm_pascal_matrix","title":"Generate a symmetric pascal matrix — generate_symm_pascal_matrix","text":"Generate symmetric pascal matrix","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_symm_pascal_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a symmetric pascal matrix — generate_symm_pascal_matrix","text":"","code":"generate_symm_pascal_matrix(n)"},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_symm_pascal_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a symmetric pascal matrix — generate_symm_pascal_matrix","text":"n positive integer, number rows columns","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_symm_pascal_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a symmetric pascal matrix — generate_symm_pascal_matrix","text":"nxn symmetric pascal matrix","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_symm_pascal_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a symmetric pascal matrix — generate_symm_pascal_matrix","text":"","code":"matrix <- generate_symm_pascal_matrix(15) matrix #>       [,1] [,2] [,3] [,4] [,5]  [,6]  [,7]   [,8]   [,9]  [,10]   [,11]   [,12] #>  [1,]    1    1    1    1    1     1     1      1      1      1       1       1 #>  [2,]    1    2    3    4    5     6     7      8      9     10      11      12 #>  [3,]    1    3    6   10   15    21    28     36     45     55      66      78 #>  [4,]    1    4   10   20   35    56    84    120    165    220     286     364 #>  [5,]    1    5   15   35   70   126   210    330    495    715    1001    1365 #>  [6,]    1    6   21   56  126   252   462    792   1287   2002    3003    4368 #>  [7,]    1    7   28   84  210   462   924   1716   3003   5005    8008   12376 #>  [8,]    1    8   36  120  330   792  1716   3432   6435  11440   19448   31824 #>  [9,]    1    9   45  165  495  1287  3003   6435  12870  24310   43758   75582 #> [10,]    1   10   55  220  715  2002  5005  11440  24310  48620   92378  167960 #> [11,]    1   11   66  286 1001  3003  8008  19448  43758  92378  184756  352716 #> [12,]    1   12   78  364 1365  4368 12376  31824  75582 167960  352716  705432 #> [13,]    1   13   91  455 1820  6188 18564  50388 125970 293930  646646 1352078 #> [14,]    1   14  105  560 2380  8568 27132  77520 203490 497420 1144066 2496144 #> [15,]    1   15  120  680 3060 11628 38760 116280 319770 817190 1961256 4457400 #>         [,13]    [,14]    [,15] #>  [1,]       1        1        1 #>  [2,]      13       14       15 #>  [3,]      91      105      120 #>  [4,]     455      560      680 #>  [5,]    1820     2380     3060 #>  [6,]    6188     8568    11628 #>  [7,]   18564    27132    38760 #>  [8,]   50388    77520   116280 #>  [9,]  125970   203490   319770 #> [10,]  293930   497420   817190 #> [11,]  646646  1144066  1961256 #> [12,] 1352078  2496144  4457400 #> [13,] 2704156  5200300  9657700 #> [14,] 5200300 10400600 20058300 #> [15,] 9657700 20058300 40116600"},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_tri_pascal_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Pascal's triangle in matrix form — generate_tri_pascal_matrix","title":"Generate Pascal's triangle in matrix form — generate_tri_pascal_matrix","text":"Generate Pascal's triangle matrix form","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_tri_pascal_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Pascal's triangle in matrix form — generate_tri_pascal_matrix","text":"","code":"generate_tri_pascal_matrix(n, position = \"lower\")"},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_tri_pascal_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Pascal's triangle in matrix form — generate_tri_pascal_matrix","text":"n positive integer, number rows columns position either \"lower\" lower-triangular matrix, default, \"upper\" upper-triangular matrix","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_tri_pascal_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Pascal's triangle in matrix form — generate_tri_pascal_matrix","text":"nxn Pascal matrix","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/generate_tri_pascal_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Pascal's triangle in matrix form — generate_tri_pascal_matrix","text":"","code":"matrix <- generate_tri_pascal_matrix(20) matrix #>       [,1] [,2] [,3] [,4] [,5]  [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    0    0    0    0     0     0     0     0     0     0     0     0 #>  [2,]    1    1    0    0    0     0     0     0     0     0     0     0     0 #>  [3,]    1    2    1    0    0     0     0     0     0     0     0     0     0 #>  [4,]    1    3    3    1    0     0     0     0     0     0     0     0     0 #>  [5,]    1    4    6    4    1     0     0     0     0     0     0     0     0 #>  [6,]    1    5   10   10    5     1     0     0     0     0     0     0     0 #>  [7,]    1    6   15   20   15     6     1     0     0     0     0     0     0 #>  [8,]    1    7   21   35   35    21     7     1     0     0     0     0     0 #>  [9,]    1    8   28   56   70    56    28     8     1     0     0     0     0 #> [10,]    1    9   36   84  126   126    84    36     9     1     0     0     0 #> [11,]    1   10   45  120  210   252   210   120    45    10     1     0     0 #> [12,]    1   11   55  165  330   462   462   330   165    55    11     1     0 #> [13,]    1   12   66  220  495   792   924   792   495   220    66    12     1 #> [14,]    1   13   78  286  715  1287  1716  1716  1287   715   286    78    13 #> [15,]    1   14   91  364 1001  2002  3003  3432  3003  2002  1001   364    91 #> [16,]    1   15  105  455 1365  3003  5005  6435  6435  5005  3003  1365   455 #> [17,]    1   16  120  560 1820  4368  8008 11440 12870 11440  8008  4368  1820 #> [18,]    1   17  136  680 2380  6188 12376 19448 24310 24310 19448 12376  6188 #> [19,]    1   18  153  816 3060  8568 18564 31824 43758 48620 43758 31824 18564 #> [20,]    1   19  171  969 3876 11628 27132 50388 75582 92378 92378 75582 50388 #>       [,14] [,15] [,16] [,17] [,18] [,19] [,20] #>  [1,]     0     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0     0 #>  [6,]     0     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0     0 #> [10,]     0     0     0     0     0     0     0 #> [11,]     0     0     0     0     0     0     0 #> [12,]     0     0     0     0     0     0     0 #> [13,]     0     0     0     0     0     0     0 #> [14,]     1     0     0     0     0     0     0 #> [15,]    14     1     0     0     0     0     0 #> [16,]   105    15     1     0     0     0     0 #> [17,]   560   120    16     1     0     0     0 #> [18,]  2380   680   136    17     1     0     0 #> [19,]  8568  3060   816   153    18     1     0 #> [20,] 27132 11628  3876   969   171    19     1"},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/pascal_matrix_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sierpiński triangle based on pascal matrix — pascal_matrix_plot","title":"Plot Sierpiński triangle based on pascal matrix — pascal_matrix_plot","text":"Plot Sierpiński triangle based pascal matrix","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/pascal_matrix_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sierpiński triangle based on pascal matrix — pascal_matrix_plot","text":"","code":"pascal_matrix_plot(m)"},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/pascal_matrix_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sierpiński triangle based on pascal matrix — pascal_matrix_plot","text":"m pascal matrix","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/pascal_matrix_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sierpiński triangle based on pascal matrix — pascal_matrix_plot","text":"plot Sierpiński triangle","code":""},{"path":"https://yxwr5.github.io/UWBiost561FP/reference/pascal_matrix_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sierpiński triangle based on pascal matrix — pascal_matrix_plot","text":"","code":"m <- generate_tri_pascal_matrix(10) plot <- pascal_matrix_plot(m) #> Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if #> `.name_repair` is omitted as of tibble 2.0.0. #> ℹ Using compatibility `.name_repair`. #> ℹ The deprecated feature was likely used in the UWBiost561FP package. #>   Please report the issue to the authors. plot"}]
